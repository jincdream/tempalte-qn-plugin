/**
 * JSON type
 * https://github.com/microsoft/TypeScript/issues/27930
 */
import { JSON } from 'ts-brand-json';
export default class ActionCore {
    constructor() {
        this.handles = {};
    }
    install(type, actionTrigger) {
        Object.defineProperty(this.handles, type, {
            value: actionTrigger,
        });
    }
    uninstall(type) {
        Object.defineProperty(this.handles, type, {
            value: void 0,
        });
        delete this.handles[type];
    }
    async run(action) {
        let { type, param, data, target, ...option } = action;
        let handle = this.handles[type];
        let paramData = {};
        if (param) {
            try {
                paramData = JSON.parse(param);
            }
            catch (error) {
                console.error(`[Action-Core Error]: action param parse error â†“\n`, error);
            }
        }
        let [_target, urlParams = ''] = target.split('?');
        let urlData = {};
        urlParams.split('&').map((v) => {
            let [key, value] = v.split('=');
            urlData[key] = value;
        });
        return handle({
            target: _target,
            data: { ...paramData, ...data, ...option, ...urlData },
        });
    }
}
//# sourceMappingURL=index.js.map