{"version":3,"file":"index.umd.js","sources":["../../node_modules/_ts-brand-json@0.1.1@ts-brand-json/index.js","../../src/index.ts"],"sourcesContent":["exports.JSON = JSON;\n","/**\n * JSON type\n * https://github.com/microsoft/TypeScript/issues/27930\n */\nimport { JSON, json } from 'ts-brand-json'\ntype Types<T, D> = { [type in keyof T]: Trigger<T, D> }\ntype Trigger<T, D> = (param: { target: string; data: D }) => T[keyof T]\nexport default class ActionCore<AllTypes> {\n  private handles: Types<AllTypes, {}> = {} as Types<AllTypes, {}>\n  install<D>(type: keyof AllTypes, actionTrigger: Trigger<AllTypes, D>) {\n    Object.defineProperty(this.handles, type, {\n      value: actionTrigger,\n    })\n  }\n  uninstall(type: keyof AllTypes) {\n    Object.defineProperty(this.handles, type, {\n      value: void 0,\n    })\n    delete this.handles[type]\n  }\n  async run<\n    Param extends { [key: string]: any },\n    Reseponse extends AllTypes[keyof AllTypes] = AllTypes[keyof AllTypes]\n  >(action: {\n    type: keyof AllTypes\n    target: string\n    param?: json<Param>\n    data?: Param\n    [key: string]: any\n  }): Promise<Reseponse> {\n    let { type, param, data, target, ...option } = action\n    let handle = this.handles[type]\n    let paramData: Param = {} as Param\n    if (param) {\n      try {\n        paramData = JSON.parse<Param>(param)\n      } catch (error) {\n        console.error(\n          `[Action-Core Error]: action param parse error â†“\\n`,\n          error\n        )\n      }\n    }\n    let [_target, urlParams = ''] = target.split('?')\n    let urlData: { [key: string]: any } = {}\n    urlParams.split('&').map((v) => {\n      let [key, value] = v.split('=')\n      urlData[key] = value\n    })\n\n    return handle({\n      target: _target,\n      data: { ...paramData, ...data, ...option, ...urlData },\n    }) as Reseponse\n  }\n}\n"],"names":["JSON"],"mappings":";;;;;;IAAA,UAAY,GAAG,IAAI;;ICOnB;QAAA;YACU,YAAO,GAAwB,EAAyB,CAAA;SA+CjE;QA9CC,4BAAO,GAAP,UAAW,IAAoB,EAAE,aAAmC;YAClE,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE;gBACxC,KAAK,EAAE,aAAa;aACrB,CAAC,CAAA;SACH;QACD,8BAAS,GAAT,UAAU,IAAoB;YAC5B,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE;gBACxC,KAAK,EAAE,KAAK,CAAC;aACd,CAAC,CAAA;YACF,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;SAC1B;QACK,wBAAG,GAAT,UAGE,MAMD;;;;oBACO,IAAI,GAAqC,MAAM,KAA3C,EAAE,KAAK,GAA8B,MAAM,MAApC,EAAE,IAAI,GAAwB,MAAM,KAA9B,EAAE,MAAM,GAAgB,MAAM,OAAtB,EAAK,MAAM,gBAAK,MAAM,EAAjD,mCAAwC,CAAF,CAAW;oBACjD,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;oBAC3B,SAAS,GAAU,EAAW,CAAA;oBAClC,IAAI,KAAK,EAAE;wBACT,IAAI;4BACF,SAAS,GAAGA,MAAI,CAAC,KAAK,CAAQ,KAAK,CAAC,CAAA;yBACrC;wBAAC,OAAO,KAAK,EAAE;4BACd,OAAO,CAAC,KAAK,CACX,wDAAmD,EACnD,KAAK,CACN,CAAA;yBACF;qBACF;oBACG,KAA4B,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,EAA5C,OAAO,QAAA,EAAE,UAAc,EAAd,SAAS,mBAAG,EAAE,KAAA,CAAqB;oBAC7C,OAAO,GAA2B,EAAE,CAAA;oBACxC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,CAAC;wBACrB,IAAA,KAAe,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAA1B,GAAG,QAAA,EAAE,KAAK,QAAgB,CAAA;wBAC/B,OAAO,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;qBACrB,CAAC,CAAA;oBAEF,sBAAO,MAAM,CAAC;4BACZ,MAAM,EAAE,OAAO;4BACf,IAAI,kEAAO,SAAS,GAAK,IAAI,GAAK,MAAM,GAAK,OAAO,CAAE;yBACvD,CAAc,EAAA;;;SAChB;QACH,iBAAC;IAAD,CAAC,IAAA;;;;;;;;"}